<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:id="@+id/ll_root_view">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <!-- 1.设置背景颜色 -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="设置背景颜色"
            android:background="#FF00FF"
            android:layout_marginTop="10dp"
            android:textSize="20sp"/>

        <!-- 2.在程序中设置值 -->
        <TextView
            android:id="@+id/tv0"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textSize="20sp"/>

        <!-- 3.实现多字符的动态处理 -->
        <TextView
            android:id="@+id/tv1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textSize="20sp"/>

        <!-- 4.TextView 显示HTML,字体颜色为红色 -->
        <TextView
            android:id="@+id/tv2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textSize="20sp"/>

        <!-- 5.给TextView设置点击事件 -->
        <TextView
            android:id="@+id/tv3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textSize="20sp"/>

        <!-- 6.给TextView文字加粗并设置阴影效果 -->
        <!-- android:shadowColor 阴影颜色 -->
        <!-- android:shadowDx 水平方向上的偏移量 -->
        <!-- android:shadowDy 垂直方向上的偏移量 -->
        <!-- android:shadowRadius 阴影的半径大小 -->
        <TextView
            android:id="@+id/tv4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textStyle="bold"

            android:shadowColor="#ff000000"
            android:shadowDx="10"
            android:shadowDy="10"
            android:shadowRadius="1"
            android:text="文字音乐，文字加粗"/>

        <!-- 7.TextView显示文字图片 -->
        <!-- drawableBottom 在文本框内文本的底端绘制指定图像 -->
        <!-- drawableLeft 在文本框内文本的左边绘制指定图像 -->
        <!-- drawableRight 在文本框内文本的右边绘制指定图像 -->
        <!-- drawableTop 在文本框内文本的顶端绘制指定图像 -->
        <!-- drawablePadding 设置文本框内文本与图像之间的间距 -->
        <!-- android:gravity 组件的子组件在组件中的位置【用于指定文字在控件中的对齐方式】 -->
        <TextView
            android:id="@+id/tv5"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:drawableLeft="@drawable/ic_launcher_foreground"
            android:drawablePadding="10dp"
            android:gravity="center_vertical"
            android:text="文字+图片(文字与图像垂直居中)"/>

        <!-- 8.TextView的样式类span的使用 -->
        <!--首先创建一个SpannableString对象，构造方法中传入要显示的内容，调用SpannableString的
            setSpan方法实现字符串的各种风格的显示。setSpan方法有四个参数，参数1表示格式，可以是前景色、背景色等
            参数2设置格式的开始index
            参数3结束index
            参数4是一个常量，有一下四个值：
        -->
        <!-- Spannable.SPAN_INCLUSIVE_EXCLUSIVE 前面包括、后面不包括，即在文本前面插入新的文本会应用该样式，
            而在文本后面插入新文本不会应用该样式
        -->
        <!--
            Spannable.SPAN_INCLUSIVE_INCLUSIVE 前面包括、后面包括，即在文本前面插入新的文本会应用该样式，
            而在文本后面插入新文本也会应用该样式
         -->
        <!-- Spannable.SPAN_EXCLUSIVE_EXCLUSIVE 前面不包括、后面不包括 -->
        <!-- Spannable.SPAN_EXCLUSIVE_INCLUSIVE 前面不包括、后面包括 -->
        <!-- -->
        <!-- -->
        <TextView
            android:id="@+id/tv6"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="8.TextView的样式类span的使用"/>
    </LinearLayout>
</LinearLayout>